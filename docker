DOCKER:It is used to deploy applications easy 
-------
Docker is a tool designed to make it easier to create, deploy, and run applications by using containers. Containers allow a developer to package up an application with all of the parts it needs, such as libraries and other dependencies, andship it all out as one package.

DOCKRER TERMINOLOGIES:

IMAGE:It is a metadata of an os.It cant have memory it just have storage space

CONTAINER:When the image gets executes it has its own running space and all the features of the application.Each container has its own isolated area

----------------     DOCKER IS WRITTEN IN GO LANGUAGE      -------------------
------------------------------------
TO INSTALL DOCKER ON UBUNTU 16.04
------------------------------------
1.First, in order to ensure the downloads are valid, add the GPG key for the official Docker repository to your system:

$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

2.Add the Docker repository to APT sources:

$ sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

3.Next, update the package database with the Docker packages from the newly added repo:

$ sudo apt-get update

4.Make sure you are about to install from the Docker repo instead of the default Ubuntu 16.04 repo:

$ apt-cache policy docker-ce

5.Finally, install Docker:
$sudo apt-get install -y docker-ce

6.Docker should now be installed, the daemon started, and the process enabled to start on boot. Check that it's running:

$ sudo systemctl status docker
--------------------------------------------------------------
1.To see the docker version
$ docker --version

2.Any help from docker
$ docker --help

3.To pull any image from docker hub
$ docker pull image-name

4.To run the image
$ docker run image-name

5.To see the list of images in local repo
$ docker images
--------------------------------------------------------------
NOTE:If u want to download the image just give "docker pull image-name.If u want to run the image give"docker run image".If u run the image first it check from the local deamon if not there it checks from the docker hub and executes.docker run image means pull+executes.

1.docker--Client
2.docker deamon-service
3.registry-docker hub
--------------------------------------------------------------
6.To see the running containers
$ docker ps

7.T see the history of cantainers
$ docker ps -a

8.To spinup the container without pulling from dockerhub
$ docker run -it centos "bin/bash"

9.to remove the multiple container at a time
$ docker rm $(docker rm -a -q)

10.to be in attach mode(when u come out of the promt jenkins stop working)attach mode
$ docker run -p 8081:8080 jenkins

11.docker -d -p 8081:8080 jenkins
attach mode--when u come out of the prompt still jenkins will run in browser

12.To get into container
$ docker exec -it conatiner-name /bin/bash

13.to perform linux commands without getting into container 
$ docker exec container-id ls/
------------------------------------------------------------------------
WHAT CONTAINER DOES?
It will create a user space which is isolated to launch an application
------------------------------------------------------------------------
1.Isolation:It is done beacause of the linux kernel concept called namespace(pid namespace,user namespace,net namespace)
2.control groups:These are useful to control the process
example if u run a containee in a docker and run application on top of that for suppose if its ram is 512mb and if u want to increase to 2gb then the cgropus will help 
3.what permission u would give to process--capabilities
exaple if u want ur process to control the network of ur system certain capabilities are used like CAP_NET_BIND_SERVICE
4.libconatiner:if ur running docker on linux ubuntu if the kernel gets updated docker may run maynot run u cant garuntee so to avoid this problem lib container comes where it speaks to kernel makes changes
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TAG:It is nothing but a version of ur image---docker run -p 80:80 nginx:1.12
----------------------------------------------------------------------------
14.to stop conatiner-id or name
$ docker stop id

15.To start the container 
$ docker start id or anme

16.to know abou the container info
$ docker inspect container-id

17.docker run -d -p 8080:80 nginx:1.12(tag)
tag means versioning of an image